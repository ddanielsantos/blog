name: Teste de regress√£o visual

on:
  pull_request:
    branches:
      - main

jobs:
  visual-regression:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do c√≥digo
        uses: actions/checkout@v3

      - name: Instalar Bun
        uses: oven-sh/setup-bun@v2

      - name: Instalar depend√™ncias
        run: bun i

      - name: Instalar browsers do Playwright
        run: bunx playwright install

      - name: Gerar arquivo .env fake
        run: |
            echo "API_KEY=$(openssl rand -hex 16)" >> .env
            echo "ENDPOINT_URL=production" >> .env

      - name: Build do site Astro
        run: bun run build

      - name: Rodar servidor em background
        run: bunx serve dist -l 4321 &
        env:
          NODE_ENV: production

      - name: Esperar servidor iniciar
        run: bunx wait-on http://localhost:4321

      - name: Rodar testes visuais
        run: bun run test:visual

      - name: Fazer upload dos resultados de testes (screenshots, diffs)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-test-results
          path: test-results/
          retention-days: 1

      - name: Comentar no PR com o link para os artifacts
        if: failure()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request;
            if (!pr) {
              console.log("N√£o √© um PR, n√£o comentando.");
              return;
            }

            const runUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`;
            const commentBody = `\n‚ö†Ô∏è **Teste de regress√£o visual falhou**\n\nüì∏ Veja os screenshots com diferen√ßas: [Acessar artifacts e logs do workflow](${runUrl})\n\nSe a mudan√ßa √© intencional, atualize os snapshots com:\t\n\`npx playwright test --update-snapshots\`\t\ne commite os novos arquivos.\t\n`;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
              body: commentBody
            });
